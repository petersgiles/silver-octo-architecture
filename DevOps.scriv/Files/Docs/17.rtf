{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \fi720\ltrch\loch {\f0\fs24\b0\i0 Table of Contents}
\par\plain {\f0\fs24\b0\i0 Summary of Findings}
\par\plain {\f0\fs24\b0\i0 Problem Statement}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The Guidance Framework}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Step 1: Document Your Current Build Process}
\par\plain {\f0\fs24\b0\i0 Determine Your Maturity Level}
\par\plain {\f0\fs24\b0\i0 Brainstorm Your Desired Outcomes and Artifacts}
\par\plain {\f0\fs24\b0\i0 Benchmark Your Current Build Process}
\par\plain {\f0\fs24\b0\i0 Understand the Definition of a Build Pipeline}
\par\plain {\f0\fs24\b0\i0 Document Your Current Process, Then Make It Repeatable and Optimized}
\par\plain {\f0\fs24\b0\i0 Conduct an Inventory of Your Existing Build Infrastructure}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Step 2: Design and Use Build Atoms}
\par\plain {\f0\fs24\b0\i0 Create a Process That Is the Easiest Path to Follow}
\par\plain {\f0\fs24\b0\i0 Create Atomic Builds Based on Configuration and Convention}
\par\plain {\f0\fs24\b0\i0 Ensure That Developers Create Unit Tests for Their Code}
\par\plain {\f0\fs24\b0\i0 Dashboard the Build Results}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Step 3: Create a Continuous Integration Environment}
\par\plain {\f0\fs24\b0\i0 Understand the Purpose of Continuous Integration}
\par\plain {\f0\fs24\b0\i0 Encourage Transparency Through the Use of a Continuous Integration Process}
\par\plain {\f0\fs24\b0\i0 Keep Builds Fast}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Step 4: Add Advanced Test Processes}
\par\plain {\f0\fs24\b0\i0 Static Code Analysis and Code Inspection Tools}
\par\plain {\f0\fs24\b0\i0 Functional and System Testing}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Step 5: Add an Ability to Stage Testing Environments}
\par\plain {\f0\fs24\b0\i0 Follow-Up: Continuously Monitor and Improve the Build Process}
\par\plain {\f0\fs24\b0\i0 Risks and Pitfalls}
\par\plain {\f0\fs24\b0\i0 Brittle Scripts and Slow, Broken Builds}
\par\plain {\f0\fs24\b0\i0 Continuous Integration Makes Things Worse Before They Get Better}
\par\plain {\f0\fs24\b0\i0 Team Members Who Work Around Governance}
\par\plain {\f0\fs24\b0\i0 Stakeholders Who Lose Confidence in Test Automation}
\par\plain {\f0\fs24\b0\i0 New Platforms That Don't Support Robust Automated Testing}
\par\plain {\f0\fs24\b0\i0 Initial set up time can be painstaking to annoyingly difficult}
\par\plain {\f0\fs24\b0\i0 Build times don't meet expectations}
\par\plain {\f0\fs24\b0\i0 Maintaining the solution outweighs the benefits}}